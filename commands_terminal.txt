# install localstack
docker run -d --name localstack -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack

# verify localstack working
docker logs localstack

# install k3d
curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

# create cluster
k3d cluster create devsecops-cluster \
  --agents 2 \
  --port "80:80@loadbalancer" \
  --k3s-arg "--tls-san=0.0.0.0@server:0"  

# install argoCD

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

# expose ArgoCD 

kubectl port-forward svc/argocd-server -n argocd 8080:443

# get initial credentaisl for argocd

kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 --decode

# install nginx-ingress-controller

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml

# execute pod dns-test to testing coredns

kubectl apply -f apps/coredns/manifests/pod.yaml 

# test coredns

kubectl exec -it dns-test -- nslookup kubernetes.default.svc.cluster.local

# remove pod 

kubectl delete pod dns-test -n default

# create pvc 

kubectl apply -f apps/local-path-provider/manifests/pvc.yaml

# create pod to testing

kubectl apply -f apps/local-path-provider/manifests/pod.yaml

# test pvc

kubectl exec -it test-pod -- sh -c "echo 'Test data' > /data/test.txt && cat /data/test.txt"

# delete pod 

kubectl delete pod test-pod -n default

# delete pvc 

kubectl delete pvc test-pvc

# testing bitwarden

kubectl port-forward svc/bitwarden-service 8080:80 -n bitwarden

ubuntu-latest